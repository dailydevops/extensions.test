name: 'Build & Tests'

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
    DOTNET_NOLOGO: true
    dotnet-version: |
      3.1.x
      6.x
      7.x

jobs:
  build:
    name: "Build & Test"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.dotnet-version }}

    - name: Cache
      uses: actions/cache@v3
      id: nuget-cache
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --no-restore --collect:"XPlat Code Coverage"

    - name: Update codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

    - name: Upload NuGet packages
      uses: actions/upload-artifact@v3
      with:
        name: release-packages
        path: |
          **/*.nupkg
          **/*.snupkg

  nuget:
    name: "Publish to NuGet.org"
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: release-packages
        path: packages

    - name: Push packages to nuget.org/profiles/NetEvolve
      run: dotnet nuget push packages/**/*.nupkg -k ${{ secrets.NUGET_TOKEN }} -s https://api.nuget.org/v3/index.json --skip-duplicate
